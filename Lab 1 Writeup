#---LAB 1---
#3.
# this code has the complexity t=0.4736e^(1.082x) in microseconds (R^2 = 0.998)
# this means that it would take 93944 years to compute N = 40
# If N = 100, it would take 1.47 * 10^33 years to compute
# The significance of this is that this extremely simple model cannot handle relatively small values of N.
# The one optimization that could be made is if I used a lookup table grid instead of a chain of polymers as this would make looking up individual units O(1) instead of O(n)
# One could speed up the search by pruning chains with three consecutive same-handed turns. This would speed up the process by 22.2% (2/9) as there are 2 such handed turns every three steps.

#4.
#Plotting <R_g> against N, I get the fit <R_g> = 0.3119x^0.7614 . This exponent value is very close to the expected value of 0.75. The difference between the two values could be due to the relatively small sample size.
#Given this value, the lattice model seems to be useful for investigating <R_g>

#Plotting R_min against N, I get the fit R_min = 0.3563x^0.5412. This is near what I would expect as the minimal R value occurs when the chain coils up on itself thus the R_g would be constant. Since side length is N^(1/2) This would mean that the R value would be around N^(1/2)
#Estimating, R_min for N=25 = 1.78 and R_min for N=100 = 3.56.
#After calculating the integral N=25 should equal 2.04 and N=100 should = 4.08
